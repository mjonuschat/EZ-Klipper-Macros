[gcode_macro _HOME_AXIS]
gcode:
    {% set sensorless_variables = printer['gcode_macro _Sensorless_Homing_Variables'] %}
    {% set homing_current = sensorless_variables.homing_current | float %}
    {% set clear_time = (sensorless_variables.clear_time * 1000) | float %}
    {% set backoff_distance = sensorless_variables.backoff_distance | float %}
    {% set kinematics = printer.configfile.config.printer.kinematics %}
    {% set axis = params.AXIS | lower %}
    {% set homing_speed = (printer.configfile.settings['stepper_' + axis].homing_speed * 60) | float %}
    {% set endstop_position = (printer.configfile.settings['stepper_' + axis].position_endstop) | float %}


    {% if homing_current != 0.0 %}
        {% if axis == 'x' %}
            {% if 'virtual' in printer.configfile.settings.stepper_x.endstop_pin %}
                {% if kinematics == 'corexy' %}
                    {% if 'y' not in printer.toolhead.homed_axes %}
                        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current}
                        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={homing_current}
                    {% elif 'x' in printer.toolhead.homed_axes %}
                        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current}
                        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={homing_current}
                    {% endif %}
                {% elif kinematics == 'corexz' %}
                    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current}
                    SET_TMC_CURRENT STEPPER=stepper_z CURRENT={homing_current}
                {% elif kinematics == 'cartesian' %}
                    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current}
                {% endif %}
            {% endif %}

        {% elif axis == 'y' %}
            {% if 'virtual' in printer.configfile.settings.stepper_y.endstop_pin %}
                {% if kinematics == 'corexy' %}
                    {% if 'x' not in printer.toolhead.homed_axes %}
                        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current}
                        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={homing_current}
                    {% elif 'y' in printer.toolhead.homed_axes %}
                        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={homing_current}
                        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={homing_current}
                    {% endif %}
                {% elif kinematics == 'corexz' or kinematics == 'cartesian' %}
                    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={homing_current}
                {% endif %}
            {% endif %}
        {% endif %}
    {% endif %}

    G28 {axis}

    {% if backoff_distance > 0 %}             
        G91
        G0 {axis}-{backoff_distance} F{homing_speed}
        G90
    {% endif %}                               

    G0 {axis}{endstop_position - backoff_distance}

    {% if homing_current != 0.0 %}
        {% if 'tmc2209 stepper_x' in printer %}
            {% set driver_x = 'tmc2209' %} 
        {% elif 'tmc5160 stepper_x' in printer %}
            {% set driver_x = 'tmc5160' %} 
        {% elif 'tmc2130 stepper_x' in printer %}
            {% set driver_x = 'tmc2130' %} 
        {% elif 'tmc2660 stepper_x' in printer %}
            {% set driver_x = 'tmc2660' %} 
        {% elif 'tmc2240 stepper_x' in printer %}
            {% set driver_x = 'tmc2240' %} 
        {% endif %}
        
        {% if 'tmc2209 stepper_y' in printer %}
            {% set driver_y = 'tmc2209' %} 
        {% elif 'tmc5160 stepper_y' in printer %}
            {% set driver_y = 'tmc5160' %} 
        {% elif 'tmc2130 stepper_y' in printer %}
            {% set driver_y = 'tmc2130' %} 
        {% elif 'tmc2660 stepper_y' in printer %}
            {% set driver_y = 'tmc2660' %} 
        {% elif 'tmc2240 stepper_y' in printer %}
            {% set driver_y = 'tmc2240' %} 
        {% endif %}

        {% if 'tmc2209 stepper_z' in printer %}
            {% set driver_z = 'tmc2209' %} 
        {% elif 'tmc5160 stepper_z' in printer %}
            {% set driver_z = 'tmc5160' %} 
        {% elif 'tmc2130 stepper_z' in printer %}
            {% set driver_z = 'tmc2130' %} 
        {% elif 'tmc2660 stepper_z' in printer %}
            {% set driver_z = 'tmc2660' %} 
        {% elif 'tmc2240 stepper_z' in printer %}
            {% set driver_z = 'tmc2240' %} 
        {% endif %}

        {% if axis == 'x' %}
            {% if 'virtual' in printer.configfile.settings.stepper_x.endstop_pin %}
                {% if kinematics == 'corexy' %}
                    {% if 'y' in printer.toolhead.homed_axes %}
                        {% set run_current_x = printer.configfile.settings[driver_x +' stepper_x'].run_current %}
                        {% set run_current_y = printer.configfile.settings[driver_y +' stepper_y'].run_current %}
                        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={run_current_x}
                        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={run_current_y}
                    {% endif %}
                {% elif kinematics == 'corexz' %}
                    {% if 'x' in printer.toolhead.homed_axes %}
                        {% set run_current_x = printer.configfile.settings[driver_x +' stepper_x'].run_current %}
                        {% set run_current_z = printer.configfile.settings[driver_z +' stepper_z'].run_current %}
                        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={run_current_x}
                        SET_TMC_CURRENT STEPPER=stepper_z CURRENT={run_current_z}
                    {% endif %}
                {% elif kinematics == 'cartesian' %}
                    {% set run_current_x = printer.configfile.settings[driver_x +' stepper_x'].run_current %}
                    SET_TMC_CURRENT STEPPER=stepper_x CURRENT={run_current_x}
                {% endif %}
            {% endif %}
        {% elif axis == 'y' %}
            {% if 'virtual' in printer.configfile.settings.stepper_y.endstop_pin %}
                {% if kinematics == 'corexy' %}
                    {% if 'x' in printer.toolhead.homed_axes %}
                        {% set default_current_x = printer.configfile.settings[driver_x +' stepper_x'].run_current %}
                        {% set default_current_y = printer.configfile.settings[driver_y +' stepper_y'].run_current %}
                        SET_TMC_CURRENT STEPPER=stepper_x CURRENT={run_current}
                        SET_TMC_CURRENT STEPPER=stepper_y CURRENT={run_current}
                    {% endif %}
                {% elif kinematics == 'corexz' or kinematics == 'cartesian' %}
                    {% set default_current_y = printer.configfile.settings[driver_y +' stepper_y'].run_current %}
                    SET_TMC_CURRENT STEPPER=stepper_y CURRENT={run_current}
                {% endif %}
            {% endif %}
        {% endif %}
    {% endif %}

    G4 P{clear_time}

[homing_override]
axes: xyz
set_position_z: 0
gcode:
    {% set home_all = 'X' not in params and 'Y' not in params and 'Z' not in params %}              #
    {% set z_hop_speed = (printer.configfile.settings['stepper_z'].homing_speed * 60) | float %}    #
    {% set travel_speed = (printer.toolhead.max_velocity * 60) | float %}                           #
    {% set sensorless_variables = printer['gcode_macro _Sensorless_Homing_Variables'] %}            #
    {% set z_hop_distance = sensorless_variables.z_hop_distance | float %}                          # Collect all variables needed for sensorless homing
    {% set first_homed_axis = sensorless_variables.first_homed_axis | string %}                     # from machine config file and _Sensorless_Homing_Variables
    {% set safe_x = sensorless_variables.safe_x | float %}                                          #
    {% set safe_y = sensorless_variables.safe_y | float %}                                          #
    {% set safe_z = sensorless_variables.safe_z_enable | abs %}                                     #

    {% if printer.configfile.settings.beacon is defined %}                                          # Check if a third-party [probe] definiton is used
        {% set probe_name = printer.configfile.settings.beacon %}                                   # If [beacon] is found in config, set 'probe_name' as [beacon] config string
    {% elif printer.configfile.settings.probe is defined %}                                         #
        {% set probe_name = printer.configfile.settings.probe %}                                    # If [probe] is found in config, set 'probe_name' as [probe] config string
    {% endif %}                                                                                     #

    {% if 'probe' in printer.configfile.settings.stepper_z.endstop_pin %}                           # Check if Z is configured to home with a probe and pull config values for
        {% set probe_x_offset = probe_name.x_offset | float %}                                      # X and Y offsets
        {% set probe_y_offset = probe_name.y_offset | float %}                                      #
    {% else %}                                                                                      #
        {% set probe_x_offset = 0 | float %}                                                        #
        {% set probe_y_offset = 0 | float %}                                                        # If Z if not homed with a probe, set offsets to 0 (do not apply an offset)
    {% endif %}                                                                                     #

    {% if probe_x_offset < 0 %}                                                                     #
        {% set safe_x = safe_x + probe_x_offset %}                                                  #
    {% elif probe_x_offset > 0 %}                                                                   # Depending on if probe_x_offset is a positive or negative value, adjust safe_x
        {% set safe_x = safe_x - probe_x_offset %}                                                  # If the machine does not home Z with a probe, an offset is not applied.
    {% endif %}                                                                                     #

    {% if safe_y == -128 %}                                                                         # 
        {% set safe_y = (printer.configfile.settings.stepper_y.position_max) /2 %}                  # If safe_y is '-128', set safe_y to the center of the Y axis
    {% endif %}                                                                                     #

    {% if probe_y_offset < 0 %}                                                                     #
        {% set safe_y = safe_y + probe_y_offset %}                                                  #
    {% elif probe_y_offset > 0 %}                                                                   # Depending on if probe_y_offset is a positive or negative value, adjust safe_y
        {% set safe_y = safe_y - probe_y_offset %}                                                  # If the machine does not home Z with a probe, an offset is not applied.
    {% endif %}                                                                                     #

    {% if safe_z == True %}                                                                         # Check if safe_z is enabled

        {% if safe_x == -128 %}                                                                     #
            {% set safe_x = (printer.configfile.settings.stepper_x.position_max) /2 %}              # If safe_x is '-128', set safe_x to the center of the X axis
        {% endif %}                                                                                 # otherwise, use configured value

        {% if safe_y == -128 %}                                                                     # 
            {% set safe_y = (printer.configfile.settings.stepper_y.position_max) /2 %}              # If safe_y is '-128', set safe_y to the center of the Y axis
        {% endif %}                                                                                 # otherwise, use configured value

        {% if probe_x_offset < 0 %}                                                                 # Depending on if probe_x_offset is a positive or negative value, adjust safe_x
            {% set safe_x = safe_x + probe_x_offset %}                                              # Positive X offset = Probe is to the right of the nozzle
        {% elif probe_x_offset > 0 %}                                                               # Negative X offset = Probe is to the left of the nozzle
            {% set safe_x = safe_x - probe_x_offset %}                                              # If the machine does not home Z with a probe, an offset is not applied.
        {% endif %}                                                                                 #

        {% if probe_y_offset < 0 %}                                                                 # Depending on if probe_y_offset is a positive or negative value, adjust safe_y
            {% set safe_y = safe_y + probe_y_offset %}                                              # Positive Y offset = Probe is behind the nozzle
        {% elif probe_y_offset > 0 %}                                                               # Negative Y offset = Probe is in front of the nozzle
            {% set safe_y = safe_y - probe_y_offset %}                                              # If the machine does not home Z with a probe, an offset is not applied.
        {% endif %}                                                                                 #

    {% endif %}                                                                                     #

    {% if z_hop_distance > 0 %}                                                                     # Check if z_hop_distance is greater than zero
      {% if 'x' not in printer.toolhead.homed_axes and 'y' not in printer.toolhead.homed_axes %}    # If X and Y are not homed, move Z to z_hop_distance
        G0 Z{z_hop_distance} F{z_hop_speed}                                                         #
      {% endif %}                                                                                   #
    {% endif %}                                                                                     #

    {% if first_homed_axis == 'X' %}                                                                # If first_homed_axis is 'X', begin G28 param check
      {% if home_all or 'X' in params %}                                                            #
        _HOME_AXIS AXIS=X                                                                           # If home_all or 'X' is in params, home X
      {% endif %}                                                                                   #
      {% if home_all or 'Y' in params %}                                                            # If home_all or 'Y' in params, home Y
        _HOME_AXIS AXIS=Y                                                                           #
      {% endif %}                                                                                   #
    {% endif %}                                                                                     #

    {% if first_homed_axis == 'Y' %}                                                                # If first_homed_axis is 'Y', begin G28 param check
      {% if home_all or 'Y' in params %}                                                            #
        _HOME_AXIS AXIS=Y                                                                           # if home_all or 'Y' is in params, home Y
      {% endif %}                                                                                   #
      {% if home_all or 'X' in params %}                                                            # If home_all or 'X' in params, home X
        _HOME_AXIS AXIS=X                                                                           #
      {% endif %}                                                                                   #
    {% endif %}                                                                                     #

    {% if safe_z == True and home_all or 'Z' in params %}                                           # If safe_z is true and home_all or 'Z' is in params,
        G0 X{safe_x} Y{safe_y} F{travel_speed}                                                      # Move to the defined safe XY location
    {% endif %}                                                                                     #
    
    {% if home_all or 'Z' in params %}                                                              #
        G28 Z                                                                                       # Home the Z axis
        G0 Z{z_hop_distance} F{z_hop_speed}                                                         # Move Z to z_hop_distance
    {% endif %}                                                                                     #
